{
  "id": "@itentialopensource/adapter-tufin_securetrack",
  "type": "Adapter",
  "export": "TufinSecuretrack",
  "displayName": "Tufin_securetrack",
  "title": "Tufin_securetrack",
  "src": "adapter.js",
  "roles": [
    "admin"
  ],
  "methods": [
    {
      "name": "getAdditionalParametersIdentitiesByRevision",
      "summary": "Get additional parameters identities by revision",
      "description": "Get additional parameters identities by revision",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getAdditionalParametersIdentitiesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificAdditionalParameterIdentity",
      "summary": "Get specific additional parameter identity",
      "description": "Get specific additional parameter identity",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificAdditionalParameterIdentity"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAURLCategory",
      "summary": "Get a URL Category.",
      "description": "Get a URL Category.",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getAURLCategory"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getApplicationIdentitiesByDevice",
      "summary": "Get application identities by device",
      "description": "Get application identities by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getApplicationIdentitiesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificApplicationIdentity",
      "summary": "Get specific application identity",
      "description": "Get specific application identity",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificApplicationIdentity"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getApplicationsIdentitiesByRevision",
      "summary": "Get applications identities by revision",
      "description": "Get applications identities by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getApplicationsIdentitiesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRevisionsRevisionIdApplicationsIds",
      "summary": "Get specific application identity",
      "description": "Get specific application identity",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRevisionsRevisionIdApplicationsIds"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "determineIfChangesBetweenTwoRevisionsAreAuthorized",
      "summary": "Determine if changes between two revisions are authorized",
      "description": "Determine if changes between two revisions are authorized",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/determineIfChangesBetweenTwoRevisionsAreAuthorized"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "compareRevisionsOnTwoDifferentDevicesInTermsOfTraffic",
      "summary": "Compare revisions on two different devices in terms of traffic.",
      "description": "Compare revisions on two different devices in terms of traffic.",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/compareRevisionsOnTwoDifferentDevicesInTermsOfTraffic"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNameAndStatusForAllChangeWindows",
      "summary": "Get name and status for all change windows",
      "description": "Get name and status for all change windows",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getNameAndStatusForAllChangeWindows"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSchedulingAndDeviceDetailsForASpecificChangeWindow",
      "summary": "Get scheduling and device details for a specific change window",
      "description": "Get scheduling and device details for a specific change window",
      "input": [
        {
          "name": "uid",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSchedulingAndDeviceDetailsForASpecificChangeWindow"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAListOfCompletedPolicyChangesForASpecificChangeWindow",
      "summary": "Get a list of completed policy changes for a specific change window",
      "description": "Get a list of completed policy changes for a specific change window",
      "input": [
        {
          "name": "uid",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getAListOfCompletedPolicyChangesForASpecificChangeWindow"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNetworkInterfacesByDevice",
      "summary": "Get network interfaces by device",
      "description": "Get network interfaces by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNetworkInterfacesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNetworkInterfacesByRevision",
      "summary": "Get network interfaces by revision",
      "description": "Get network interfaces by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNetworkInterfacesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDeviceZonesByRevision",
      "summary": "Get device zones by revision",
      "description": "Get device zones by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDeviceZonesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDeviceZonesByDevice",
      "summary": "Get device zones by device",
      "description": "Get device zones by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDeviceZonesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getZonesAndNetworkInterfacesThatParticipateInSubPolicies",
      "summary": "Get zones and network interfaces that participate in sub-policies",
      "description": "Get zones and network interfaces that participate in sub-policies",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getZonesAndNetworkInterfacesThatParticipateInSubPolicies"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDomain",
      "summary": "Get domain",
      "description": "Get domain",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDomain"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "updateADomain",
      "summary": "Update a domain",
      "description": "Update a domain",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/updateADomain"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addADomain",
      "summary": "Add a domain",
      "description": "Add a domain",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addADomain"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAllDomains",
      "summary": "Get all domains",
      "description": "Get all domains",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getAllDomains"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getGeneralProperties",
      "summary": "Get general properties",
      "description": "Get general properties",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getGeneralProperties"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCiscoCryptographicMapsByRevision",
      "summary": "Get Cisco cryptographic maps by revision",
      "description": "Get Cisco cryptographic maps by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCiscoCryptographicMapsByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCiscoIPsecPolicyAndPeers",
      "summary": "Get Cisco IPsec policy and peers",
      "description": "Get Cisco IPsec policy and peers",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCiscoIPsecPolicyAndPeers"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCheckPointVPNIPSecCommunitiesAndGateways",
      "summary": "Get Check Point VPN (IPSec) communities and gateways",
      "description": "Get Check Point VPN (IPSec) communities and gateways",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCheckPointVPNIPSecCommunitiesAndGateways"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCiscoCryptographicMapsByDevice",
      "summary": "Get Cisco cryptographic maps by device",
      "description": "Get Cisco cryptographic maps by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCiscoCryptographicMapsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getResolvedInternetRepresentationForDevice",
      "summary": "Get resolved Internet representation for device",
      "description": "Get resolved Internet representation for device",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getResolvedInternetRepresentationForDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createNewInternetRepresentationForADevice",
      "summary": "Create new Internet representation for a device",
      "description": "Create new Internet representation for a device",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createNewInternetRepresentationForADevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteInternetRepresentationForDevice",
      "summary": "Delete Internet representation for device",
      "description": "Delete Internet representation for device",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteInternetRepresentationForDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "updateInternetRepresentationForDevice",
      "summary": "Update Internet representation for device",
      "description": "Update Internet representation for device",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/updateInternetRepresentationForDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getInternetRepresentationForDevice",
      "summary": "Get Internet representation for device",
      "description": "Get Internet representation for device",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getInternetRepresentationForDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getLDAPEntryDetailsByDN",
      "summary": "Get LDAP entry details by DN",
      "description": "Get LDAP entry details by DN",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getLDAPEntryDetailsByDN"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "returnEntriesThatExactlyMatchOneOfTheGivenStrings",
      "summary": "Return entries that exactly match one of the given strings",
      "description": "Return entries that exactly match one of the given strings",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/returnEntriesThatExactlyMatchOneOfTheGivenStrings"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTheBaseDNEntryDetails",
      "summary": "Get the base DN entry details",
      "description": "Get the base DN entry details",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTheBaseDNEntryDetails"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "returnLDAPEntriesWhichMatchTheGivenSearchCriteria",
      "summary": "Return LDAP entries which match the given search criteria",
      "description": "Return LDAP entries which match the given search criteria",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/returnLDAPEntriesWhichMatchTheGivenSearchCriteria"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTextualConfigurationByRevision",
      "summary": "Get textual configuration by revision",
      "description": "Get textual configuration by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTextualConfigurationByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "importManagedDevices",
      "summary": "Import managed devices",
      "description": "Import managed devices",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/importManagedDevices"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "editSecuretrackDevice",
      "summary": "Edit Securetrack device",
      "description": "Edit Securetrack device",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/editSecuretrackDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addDevicesToSecureTrack",
      "summary": "Add devices to SecureTrack",
      "description": "Add devices to SecureTrack",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addDevicesToSecureTrack"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificTaskResultsOfBulkOperationsOnDevices",
      "summary": "Get specific task results of bulk operations on devices",
      "description": "Get specific task results of bulk operations on devices",
      "input": [
        {
          "name": "taskUid",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificTaskResultsOfBulkOperationsOnDevices"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addConfigurationForOfflineDevice",
      "summary": "Add configuration for offline device",
      "description": "Add configuration for offline device",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addConfigurationForOfflineDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificDevice",
      "summary": "Get specific device",
      "description": "Get specific device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "updateOfflineDevice",
      "summary": "Update offline device",
      "description": "Update offline device",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/updateOfflineDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDevices",
      "summary": "Get devices",
      "description": "Get devices",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getDevices"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addOfflineDevice",
      "summary": "Add offline device",
      "description": "Add offline device",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addOfflineDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTextualConfigurationByDevice",
      "summary": "Get textual configuration by device",
      "description": "Get textual configuration by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTextualConfigurationByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNATObjectsByDevice",
      "summary": "Get NAT objects by device",
      "description": "Get NAT objects by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNATObjectsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNATObjectsByRevision",
      "summary": "Get NAT objects by revision",
      "description": "Get NAT objects by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNATObjectsByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNATRulesByDevice",
      "summary": "Get NAT rules by device",
      "description": "Get NAT rules by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNATRulesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNetworkGroupsContainingSpecifiedNetworkObject",
      "summary": "Get network groups containing specified network object",
      "description": "Get network groups containing specified network object",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNetworkGroupsContainingSpecifiedNetworkObject"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificNetworkObjectsByRevision",
      "summary": "Get specific network objects by revision",
      "description": "Get specific network objects by revision",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificNetworkObjectsByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificNetworkObject",
      "summary": "Get specific network object",
      "description": "Get specific network object",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificNetworkObject"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNetworkObjectsByRevision",
      "summary": "Get network objects by revision",
      "description": "Get network objects by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNetworkObjectsByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNetworkObjectsMatchingSpecifiedCriteria",
      "summary": "Get network objects matching specified criteria",
      "description": "Get network objects matching specified criteria",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getNetworkObjectsMatchingSpecifiedCriteria"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRulesContainingSpecifiedNetworkObject",
      "summary": "Get rules containing specified network object",
      "description": "Get rules containing specified network object",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRulesContainingSpecifiedNetworkObject"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getNetworkObjectsByDevice",
      "summary": "Get network objects by device",
      "description": "Get network objects by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getNetworkObjectsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificTopologyCloud",
      "summary": "Get Specific topology cloud",
      "description": "Get Specific topology cloud",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificTopologyCloud"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "updateACloud",
      "summary": "Update a cloud",
      "description": "Update a cloud",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/updateACloud"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologySubnets",
      "summary": "Get topology subnets",
      "description": "Get topology subnets",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologySubnets"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologyNetworkInterfacesByDevice",
      "summary": "Get topology network interfaces by device",
      "description": "Get topology network interfaces by device",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologyNetworkInterfacesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getMostSpecificNetworkInterfacesFromWhichAHostIPIsAccessible",
      "summary": "Get most specific network interfaces from which a host IP is accessible",
      "description": "Get most specific network interfaces from which a host IP is accessible",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getMostSpecificNetworkInterfacesFromWhichAHostIPIsAccessible"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificTopologySubnet",
      "summary": "Get Specific topology subnet",
      "description": "Get Specific topology subnet",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificTopologySubnet"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologySynchronizationStatus",
      "summary": "Get Topology Synchronization status",
      "description": "Get Topology Synchronization status",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologySynchronizationStatus"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteGenericDeviceFromTopologyModel",
      "summary": "Delete generic device from Topology model",
      "description": "Delete generic device from Topology model",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteGenericDeviceFromTopologyModel"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "updateAnExistingGenericDeviceInTheTopologyModel",
      "summary": "Update an existing generic device in the Topology model",
      "description": "Update an existing generic device in the Topology model",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/updateAnExistingGenericDeviceInTheTopologyModel"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCloudInternalNetworks",
      "summary": "Get Cloud Internal Networks",
      "description": "Get Cloud Internal Networks",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCloudInternalNetworks"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCloudInformation",
      "summary": "Get cloud information",
      "description": "Get cloud information",
      "input": [
        {
          "name": "cloudId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCloudInformation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "synchronizeTheTopologyModel",
      "summary": "Synchronize the Topology model",
      "description": "Synchronize the Topology model",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/synchronizeTheTopologyModel"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologyGenericVPNConnections",
      "summary": "Get topology generic VPN connections",
      "description": "Get topology generic VPN connections",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologyGenericVPNConnections"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologyRoutingTablesForAGivenDevice",
      "summary": "Get topology routing tables for a given device",
      "description": "Get topology routing tables for a given device",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologyRoutingTablesForAGivenDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologyCloudSuggestions",
      "summary": "Get cloud information",
      "description": "Get cloud information",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologyCloudSuggestions"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addGenericDeviceToTopologyModel",
      "summary": "Add generic device to Topology model",
      "description": "Add generic device to Topology model",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addGenericDeviceToTopologyModel"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getGenericDevicesThatAreConfiguredInST",
      "summary": "Get generic devices that are configured in ST",
      "description": "Get generic devices that are configured in ST",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getGenericDevicesThatAreConfiguredInST"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getPathImageForSpecifiedTraffic",
      "summary": "Get path image for specified traffic",
      "description": "Get path image for specified traffic",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getPathImageForSpecifiedTraffic"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getPathForSpecifiedTraffic",
      "summary": "Get path for specified traffic",
      "description": "Get path for specified traffic",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getPathForSpecifiedTraffic"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createAJoinedTopologyCloud",
      "summary": "Create a joined topology cloud",
      "description": "Create a joined topology cloud",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createAJoinedTopologyCloud"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTopologyClouds",
      "summary": "Get topology clouds",
      "description": "Get topology clouds",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getTopologyClouds"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getASpecificZonePatternEntryForASpecificZone",
      "summary": "Get a specific zone pattern entry for a specific zone",
      "description": "Get a specific zone pattern entry for a specific zone",
      "input": [
        {
          "name": "zoneId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getASpecificZonePatternEntryForASpecificZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createAZonePatternEntryInASpecificZone",
      "summary": "Create a zone pattern entry in a specific zone",
      "description": "Create a zone pattern entry in a specific zone",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        },
        {
          "name": "zoneId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createAZonePatternEntryInASpecificZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAllPatternEntriesForSpecificZones",
      "summary": "Get all pattern entries for specific zones",
      "description": "Get all pattern entries for specific zones",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getAllPatternEntriesForSpecificZones"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getASpecificZoneEntry",
      "summary": "Get a specific zone entry",
      "description": "Get a specific zone entry",
      "input": [
        {
          "name": "zoneId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getASpecificZoneEntry"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteZoneEntries",
      "summary": "Delete zone entries",
      "description": "Delete zone entries",
      "input": [
        {
          "name": "zoneId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteZoneEntries"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "modifyAZoneEntry",
      "summary": "Modify a zone entry",
      "description": "Modify a zone entry",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "zoneId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/modifyAZoneEntry"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "modifyMultipleExistingZoneEntries",
      "summary": "Modify multiple existing zone entries",
      "description": "Modify multiple existing zone entries",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "zoneIds",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/modifyMultipleExistingZoneEntries"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteZonesZoneIdsEntriesIds",
      "summary": "Modify a zone entry",
      "description": "Modify a zone entry",
      "input": [
        {
          "name": "zoneIds",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteZonesZoneIdsEntriesIds"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createAZoneEntry",
      "summary": "Create a zone entry",
      "description": "Create a zone entry",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        },
        {
          "name": "zoneId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createAZoneEntry"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getEntriesForAZone",
      "summary": "Get entries for a zone",
      "description": "Get entries for a zone",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getEntriesForAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "importAZone",
      "summary": "Import a zone",
      "description": "Import a zone",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/importAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getConfigurationUsagesForAZone",
      "summary": "Get configuration usages for a zone",
      "description": "Get configuration usages for a zone",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getConfigurationUsagesForAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "removeAZoneAsAnDescendantsToAZone",
      "summary": "Remove a zone as an descendants to a zone",
      "description": "Remove a zone as an descendants to a zone",
      "input": [
        {
          "name": "parentId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "childIds",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/removeAZoneAsAnDescendantsToAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addAZoneAsADescendantToAZone",
      "summary": "Add a zone as a descendant to a zone",
      "description": "Add a zone as a descendant to a zone",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "parentId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "childIds",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addAZoneAsADescendantToAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createAZone",
      "summary": "Create a zone",
      "description": "Create a zone",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAllZones",
      "summary": "Get all zones",
      "description": "Get all zones",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getAllZones"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteAllZones",
      "summary": "Delete all zones",
      "description": "Delete all zones",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/deleteAllZones"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSharedZones",
      "summary": "Get shared zones",
      "description": "Get shared zones",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getSharedZones"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteAZone",
      "summary": "Delete a zone",
      "description": "Delete a zone",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "addAZoneAsAnAncestorToAZone",
      "summary": "Add a zone as an ancestor to a zone",
      "description": "Add a zone as an ancestor to a zone",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "childId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "parentIds",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/addAZoneAsAnAncestorToAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "removeAZoneAsAnAncestorToAZone",
      "summary": "Remove a zone as an ancestor to a zone",
      "description": "Remove a zone as an ancestor to a zone",
      "input": [
        {
          "name": "childId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "parentIds",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/removeAZoneAsAnAncestorToAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "modifyAZone",
      "summary": "Modify a zone",
      "description": "Modify a zone",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/modifyAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getASpecificZone",
      "summary": "Get a specific zone",
      "description": "Get a specific zone",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getASpecificZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAncestorZonesForAZone",
      "summary": "Get ancestor zones for a zone",
      "description": "Get ancestor zones for a zone",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getAncestorZonesForAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDescendantZonesForAZone",
      "summary": "Get descendant zones for a zone",
      "description": "Get descendant zones for a zone",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDescendantZonesForAZone"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "mapNetworkElementsToSecurityZones",
      "summary": "Map network elements to security zones",
      "description": "Map network elements to security zones",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/mapNetworkElementsToSecurityZones"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getListOfSubPoliciesBindingsWithInputAndOrOutputInterfaces",
      "summary": "Get list of sub-policies (bindings) with input and/or output interfaces",
      "description": "Get list of sub-policies (bindings) with input and/or output interfaces",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getListOfSubPoliciesBindingsWithInputAndOrOutputInterfaces"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getPoliciesByRevision",
      "summary": "Get policies by revision",
      "description": "Get policies by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getPoliciesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSubPoliciesBindingsByDevice",
      "summary": "Get sub-policies (bindings) by device",
      "description": "Get sub-policies (bindings) by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSubPoliciesBindingsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRulesByInputAndOutputInterfaces",
      "summary": "Get rules by input and output interfaces",
      "description": "Get rules by input and output interfaces",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRulesByInputAndOutputInterfaces"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSubPoliciesBindingsByRevision",
      "summary": "Get sub-policies (bindings) by revision",
      "description": "Get sub-policies (bindings) by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSubPoliciesBindingsByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getPoliciesByDevice",
      "summary": "Get policies by device",
      "description": "Get policies by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getPoliciesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "runPolicyAnalysisQuery",
      "summary": "Run Policy Analysis query",
      "description": "Run Policy Analysis query",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/runPolicyAnalysisQuery"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteSpecificRuleDocumentation",
      "summary": "Delete specific rule documentation",
      "description": "Delete specific rule documentation",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteSpecificRuleDocumentation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificRuleDocumentation",
      "summary": "Get specific rule documentation",
      "description": "Get specific rule documentation",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificRuleDocumentation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "modifySpecificRuleDocumentation",
      "summary": "Modify specific rule documentation",
      "description": "Modify specific rule documentation",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/modifySpecificRuleDocumentation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "putRevisionsIdRulesRuleIdDocumentation",
      "summary": "Modify specific rule documentation",
      "description": "Modify specific rule documentation",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/putRevisionsIdRulesRuleIdDocumentation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteRevisionsIdRulesRuleIdDocumentation",
      "summary": "Delete specific rule documentation",
      "description": "Delete specific rule documentation",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteRevisionsIdRulesRuleIdDocumentation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRevisionsIdRulesRuleIdDocumentation",
      "summary": "Get specific rule documentation",
      "description": "Get specific rule documentation",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRevisionsIdRulesRuleIdDocumentation"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCleanupsResults",
      "summary": "Get cleanups results",
      "description": "Get cleanups results",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getCleanupsResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTheSpecificObjectsOrRulesIdentifiedForTheCleanupResults",
      "summary": "Get the specific objects or rules identified for the cleanup results",
      "description": "Get the specific objects or rules identified for the cleanup results",
      "input": [
        {
          "name": "cleanupId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTheSpecificObjectsOrRulesIdentifiedForTheCleanupResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTheSpecificObjectsOrRulesIdentifiedForTheRiskResults",
      "summary": "Get the specific objects or rules identified for the risk results",
      "description": "Get the specific objects or rules identified for the risk results",
      "input": [
        {
          "name": "riskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTheSpecificObjectsOrRulesIdentifiedForTheRiskResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCleanupsByDevice",
      "summary": "Get cleanups by device",
      "description": "Get cleanups by device",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCleanupsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDevicesInRiskResults",
      "summary": "Get devices in risk results",
      "description": "Get devices in risk results",
      "input": [
        {
          "name": "riskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDevicesInRiskResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRisksResults",
      "summary": "Get risks results",
      "description": "Get risks results",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getRisksResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getShadowingRulesByDevice",
      "summary": "Get shadowing rules by device",
      "description": "Get shadowing rules by device",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getShadowingRulesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDevicesInCleanupResults",
      "summary": "Get devices in cleanup results",
      "description": "Get devices in cleanup results",
      "input": [
        {
          "name": "cleanupId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDevicesInCleanupResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRevisionsByDevice",
      "summary": "Get revisions by device",
      "description": "Get revisions by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRevisionsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificRevision",
      "summary": "Get specific revision",
      "description": "Get specific revision",
      "input": [
        {
          "name": "revId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getLatestRevisionByDevice",
      "summary": "Get latest revision by device",
      "description": "Get latest revision by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getLatestRevisionByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getLastHitsForAllRulesByDevice",
      "summary": "Get last hits for all rules by device",
      "description": "Get last hits for all rules by device",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getLastHitsForAllRulesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getLastHitForASpecificRule",
      "summary": "Get last hit for a specific rule",
      "description": "Get last hit for a specific rule",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ruleUid",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getLastHitForASpecificRule"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getASpecificRule",
      "summary": "Get a specific rule",
      "description": "Get a specific rule",
      "input": [
        {
          "name": "ruleId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getASpecificRule"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificRule",
      "summary": "Get specific rule",
      "description": "Get specific rule",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificRule"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRuleCountPerDevice",
      "summary": "Get rule count per device",
      "description": "Get rule count per device",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getRuleCountPerDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRevisionsRevisionIdRulesIds",
      "summary": "Get specific rule",
      "description": "Get specific rule",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRevisionsRevisionIdRulesIds"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRulesByRevision",
      "summary": "Get rules by revision",
      "description": "Get rules by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRulesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "findRules",
      "summary": "Find rules",
      "description": "Find rules",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/findRules"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRulesByDevice",
      "summary": "Get rules by device",
      "description": "Get rules by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRulesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getServiceGroupsContainingSpecifiedServiceObjects",
      "summary": "Get service groups containing specified service objects",
      "description": "Get service groups containing specified service objects",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getServiceGroupsContainingSpecifiedServiceObjects"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificService",
      "summary": "Get specific service",
      "description": "Get specific service",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificService"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getDevicesDeviceIdServicesIds",
      "summary": "Get specific service",
      "description": "Get specific service",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getDevicesDeviceIdServicesIds"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getRulesContainingSpecifiedServiceObject",
      "summary": "Get rules containing specified service object",
      "description": "Get rules containing specified service object",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getRulesContainingSpecifiedServiceObject"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getServicesByRevision",
      "summary": "Get services by revision",
      "description": "Get services by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getServicesByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getServicesObjectsMatchingSpecifiedCriteria",
      "summary": "Get services objects matching specified criteria",
      "description": "Get services objects matching specified criteria",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getServicesObjectsMatchingSpecifiedCriteria"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getServicesByDevice",
      "summary": "Get services by device",
      "description": "Get services by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getServicesByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTimeObjectsByRevision",
      "summary": "Get time objects by revision",
      "description": "Get time objects by revision",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTimeObjectsByRevision"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTimeObjectsByDevice",
      "summary": "Get time objects by device",
      "description": "Get time objects by device",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTimeObjectsByDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getSpecificTimeObject",
      "summary": "Get specific time object",
      "description": "Get specific time object",
      "input": [
        {
          "name": "revisionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        },
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getSpecificTimeObject"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getPolicyRelevanceMetricsForTraffic",
      "summary": "Get policy relevance metrics for traffic",
      "description": "Get policy relevance metrics for traffic",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getPolicyRelevanceMetricsForTraffic"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "startATaskToCalculateViolationsForAnAccessRequest",
      "summary": "Start a task to calculate violations for an access request",
      "description": "Start a task to calculate violations for an access request",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/startATaskToCalculateViolationsForAnAccessRequest"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getViolationTaskResults",
      "summary": "Get violation task results",
      "description": "Get violation task results",
      "input": [
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getViolationTaskResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getViolationTaskStatus",
      "summary": "Get violation task status",
      "description": "Get violation task status",
      "input": [
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getViolationTaskStatus"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "cancelViolationTask",
      "summary": "Cancel violation task",
      "description": "Cancel violation task",
      "input": [
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/cancelViolationTask"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getViolationsForAnAccessRequest",
      "summary": "Get violations for an access request",
      "description": "Get violations for an access request",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getViolationsForAnAccessRequest"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteAlertsByIds",
      "summary": "Delete alerts by ids",
      "description": "Delete alerts by ids",
      "input": [
        {
          "name": "ids",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteAlertsByIds"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getASpecificAlert",
      "summary": "Get a specific alert",
      "description": "Get a specific alert",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getASpecificAlert"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "updateAnAlert",
      "summary": "Update an alert",
      "description": "Update an alert",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/updateAnAlert"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createAnAlert",
      "summary": "Create an alert",
      "description": "Create an alert",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createAnAlert"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAlerts",
      "summary": "Get alerts",
      "description": "Get alerts",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getAlerts"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteCloudTagPolicy",
      "summary": "Delete cloud tag policy",
      "description": "Delete cloud tag policy",
      "input": [
        {
          "name": "policyId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteCloudTagPolicy"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "replaceACloudTagPolicy",
      "summary": "Replace a cloud tag policy",
      "description": "Replace a cloud tag policy",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "PUT body parameter",
          "required": true
        },
        {
          "name": "policyId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/replaceACloudTagPolicy"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "modifyACloudTagPolicy",
      "summary": "Modify a cloud tag policy",
      "description": "Modify a cloud tag policy",
      "input": [
        {
          "name": "policyId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/modifyACloudTagPolicy"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getCloudTagPolicy",
      "summary": "Get cloud tag policy",
      "description": "Get cloud tag policy",
      "input": [
        {
          "name": "policyId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getCloudTagPolicy"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "checkIfTagsAreCompliantWithCloudTagPolicies",
      "summary": "Check if tags are compliant with cloud tag policies",
      "description": "Check if tags are compliant with cloud tag policies",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/checkIfTagsAreCompliantWithCloudTagPolicies"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAllCloudTagPolicies",
      "summary": "Get all cloud tag policies",
      "description": "Get all cloud tag policies",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getAllCloudTagPolicies"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createACloudTagPolicy",
      "summary": "Create a cloud tag policy",
      "description": "Create a cloud tag policy",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createACloudTagPolicy"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAllCloudTagPolicyViolationsForAVPC",
      "summary": "Get all cloud tag policy violations for a VPC",
      "description": "Get all cloud tag policy violations for a VPC",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getAllCloudTagPolicyViolationsForAVPC"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "startATaskToCalculateMatchingRulesForAnException",
      "summary": "Start a task to calculate matching rules for an exception",
      "description": "Start a task to calculate matching rules for an exception",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        },
        {
          "name": "exceptionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/startATaskToCalculateMatchingRulesForAnException"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getMatchingRulesTaskStatus",
      "summary": "Get matching rules task status",
      "description": "Get matching rules task status",
      "input": [
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getMatchingRulesTaskStatus"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteAnException",
      "summary": "Delete an exception",
      "description": "Delete an exception",
      "input": [
        {
          "name": "exceptionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteAnException"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getASpecificException",
      "summary": "Get a specific exception",
      "description": "Get a specific exception",
      "input": [
        {
          "name": "exceptionId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getASpecificException"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "cancelMatchingRulesTask",
      "summary": "Cancel Matching rules task",
      "description": "Cancel Matching rules task",
      "input": [
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/cancelMatchingRulesTask"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getAllExceptions",
      "summary": "Get all exceptions",
      "description": "Get all exceptions",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getAllExceptions"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "createAnException",
      "summary": "Create an exception",
      "description": "Create an exception",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/createAnException"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getMatchingRulesTaskResults",
      "summary": "Get matching rules task results",
      "description": "Get matching rules task results",
      "input": [
        {
          "name": "taskId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getMatchingRulesTaskResults"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getGlobalUnifiedSecurityPolicies",
      "summary": "Get global unified security policies",
      "description": "Get global unified security policies",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getGlobalUnifiedSecurityPolicies"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getUnifiedSecurityPolicies",
      "summary": "Get unified security policies",
      "description": "Get unified security policies",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "GET",
        "path": "/getUnifiedSecurityPolicies"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getUnifiedSecurityPolicyAsCSV",
      "summary": "Get unified security policy as CSV",
      "description": "Get unified security policy as CSV",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getUnifiedSecurityPolicyAsCSV"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "deleteUnifiedSecurityPolicy",
      "summary": "Delete unified security policy",
      "description": "Delete unified security policy",
      "input": [
        {
          "name": "id",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/deleteUnifiedSecurityPolicy"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "setManualDeviceMapping",
      "summary": "Set manual device mapping",
      "description": "Set manual device mapping",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": "POST body parameter",
          "required": true
        },
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/setManualDeviceMapping"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTheAmountOfViolatingRulesForTheSpecifiedDevice",
      "summary": "Get the amount of violating rules for the specified device.",
      "description": "Get the amount of violating rules for the specified device.",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTheAmountOfViolatingRulesForTheSpecifiedDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    },
    {
      "name": "getTheViolatingRulesForTheSpecifiedDevice",
      "summary": "Get the violating rules for the specified device.",
      "description": "Get the violating rules for the specified device.",
      "input": [
        {
          "name": "deviceId",
          "type": "default",
          "info": "path parameter",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result"
      },
      "route": {
        "verb": "POST",
        "path": "/getTheViolatingRulesForTheSpecifiedDevice"
      },
      "roles": [
        "admin"
      ],
      "task": true
    }
  ]
}